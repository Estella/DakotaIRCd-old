diff -r 7c95b53da9df include/phandler.h
--- a/include/phandler.h	Fri Feb 18 23:51:46 2011 -0500
+++ b/include/phandler.h	Tue Feb 22 20:53:46 2011 -0500
@@ -62,6 +62,7 @@
 #define PROTOCOL_SOLIDIRCD		18
 #define PROTOCOL_NEFARIOUS		19
 #define PROTOCOL_OFFICEIRC		20
+#define PROTOCOL_SPORKSIRCD		21 /* --Elizabeth */
 
 #define PROTOCOL_OTHER			255
 
diff -r 7c95b53da9df include/protocol/sporksircd.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/include/protocol/sporksircd.h	Tue Feb 22 20:53:46 2011 -0500
@@ -0,0 +1,24 @@
+/*
+ * Copyright (C) 2005 William Pitcock, et al.
+ * Copyright (c) 2008 shadowircd Development Group
+ * Copyright (C) 2010 Elizabeth Jennifer Myers
+ * Rights to this code are as documented in doc/LICENSE.
+ *
+ * This code contains the channel mode definitions for SporksIRCD
+ *
+ */
+
+#ifndef SPORKSIRCD_H
+#define SPORKSIRCD_H
+
+/* Extended channel modes will eventually go here. */
+/* Note that these are involved in atheme.db file format */
+#define CMODE_IMMUNE       0x02000000	/* sporksircd +M */
+#define CMODE_NONOTICE     0x04000000	/* sporksircd +T */
+#define CMODE_NOCAPS       0x08000000	/* sporksircd +G */
+#define CMODE_NONICKS      0x10000000	/* sporksircd +N */
+#define CMODE_NOREPEAT     0x20000000	/* sporksircd +K */
+#define CMODE_KICKNOREJOIN 0x40000000	/* sporksircd +J */
+#define CMODE_ENABLECENSOR 0x80000000	/* sporksircd +W */
+
+#endif
diff -r 7c95b53da9df modules/protocol/Makefile
--- a/modules/protocol/Makefile	Fri Feb 18 23:51:46 2011 -0500
+++ b/modules/protocol/Makefile	Tue Feb 22 20:53:46 2011 -0500
@@ -31,6 +31,7 @@
 	plexus.c	\
 	ratbox.c	\
 	shadowircd.c	\
+	sporksircd.c	\
 	solidircd.c	\
 	ts6-generic.c	\
 	undernet.c	\
diff -r 7c95b53da9df modules/protocol/sporksircd.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/modules/protocol/sporksircd.c	Tue Feb 22 20:53:46 2011 -0500
@@ -0,0 +1,125 @@
+/*
+ * Copyright (c) 2003-2004 E. Will et al.
+ * Copyright (c) 2005-2008 Atheme Development Group
+ * Copyright (c) 2008-2011 sporksircd Development Group
+ * Copyright (C) 2011 Elizabeth Jennifer Myers
+ * Rights to this code are documented in doc/LICENSE.
+ *
+ * This file contains protocol support for sporksircd
+ *
+ */
+
+#include "atheme.h"
+#include "uplink.h"
+#include "pmodule.h"
+#include "protocol/charybdis.h"
+#include "protocol/sporksircd.h"
+
+DECLARE_MODULE_V1("protocol/sporksircd", true, _modinit, NULL, PACKAGE_STRING, "Elizabeth Jennifer Myers <elizabeth@sporksirc.net>");
+
+/* *INDENT-OFF* */
+
+ircd_t SporksIRCD = {
+        "SporksIRCD 1.3+",		/* IRCd name */
+        "$$",                           /* TLD Prefix, used by Global. */
+        true,                           /* Whether or not we use IRCNet/TS6 UID */
+        false,                          /* Whether or not we use RCOMMAND */
+        true,                           /* Whether or not we support channel owners. */
+        true,                           /* Whether or not we support channel protection. */
+        true,                           /* Whether or not we support halfops. */
+	false,				/* Whether or not we use P10 */
+	false,				/* Whether or not we use vHosts. */
+	CMODE_EXLIMIT | CMODE_PERM | CMODE_IMMUNE | CMODE_ENABLECENSOR, /* Oper-only cmodes */
+        CSTATUS_OWNER,                  /* Integer flag for owner channel flag. */
+        CSTATUS_PROTECT,                  /* Integer flag for protect channel flag. */
+        CSTATUS_HALFOP,                   /* Integer flag for halfops. */
+        "+u",                           /* Mode we set for owner. */
+        "+a",                           /* Mode we set for protect. */
+        "+h",                           /* Mode we set for halfops. */
+	PROTOCOL_SPORKSIRCD,		/* Protocol type */
+	CMODE_PERM,                     /* Permanent cmodes */
+	CMODE_IMMUNE,                   /* Oper-immune cmode */
+	"beIqy",                        /* Ban-like cmodes */
+	'e',                            /* Except mchar */
+	'I',                            /* Invex mchar */
+	IRCD_CIDR_BANS | IRCD_HOLDNICK  /* Flags */
+};
+
+struct cmode_ sporksircd_mode_list[] = {
+  { 'i', CMODE_INVITE },
+  { 'm', CMODE_MOD    },
+  { 'n', CMODE_NOEXT  },
+  { 'p', CMODE_PRIV   },
+  { 's', CMODE_SEC    },
+  { 't', CMODE_TOPIC  },
+  { 'c', CMODE_NOCOLOR},		/* cmodes/nocolour.c */
+  { 'r', CMODE_REGONLY},
+  { 'z', CMODE_OPMOD  },
+  { 'g', CMODE_FINVITE},
+  { 'L', CMODE_EXLIMIT},
+  { 'P', CMODE_PERM   },
+  { 'F', CMODE_FTARGET},
+  { 'Q', CMODE_DISFWD },
+  { 'M', CMODE_IMMUNE },		/* cmodes/no_oper_kick */
+  { 'C', CMODE_NOCTCP },		/* cmodes/noctcp */
+  { 'A', CMODE_ADMINONLY },		/* cmodes/adminonly */
+  { 'O', CMODE_OPERONLY },		/* cmodes/operonly */
+  { 'Z', CMODE_SSLONLY },		/* cmodes/sslonly */
+  { 'T', CMODE_NONOTICE },		/* cmodes/nonotice */
+  { 'G', CMODE_NOCAPS },		/* cmodes/nocaps */
+  { 'd', CMODE_NONICKS },		/* cmodes/nonicks */
+  { 'K', CMODE_NOREPEAT },		/* cmodes/norepeat */
+  { 'J', CMODE_KICKNOREJOIN },		/* cmodes/nokickrejoin */
+  { 'W', CMODE_ENABLECENSOR },		/* cmodes/enablecensor */
+  { '\0', 0 }
+};
+
+struct cmode_ sporksircd_status_mode_list[] = {
+  { 'u', CSTATUS_OWNER },
+  { 'a', CSTATUS_PROTECT },
+  { 'o', CSTATUS_OP    },
+  { 'h', CSTATUS_HALFOP },
+  { 'v', CSTATUS_VOICE },
+  { '\0', 0 }
+};
+
+struct cmode_ sporksircd_prefix_mode_list[] = {
+  { '~', CSTATUS_OWNER },
+  { '!', CSTATUS_PROTECT },
+  { '@', CSTATUS_OP    },
+  { '%', CSTATUS_HALFOP },
+  { '+', CSTATUS_VOICE },
+  { '\0', 0 }
+};
+
+struct cmode_ sporksircd_user_mode_list[] = {
+  { 'a', UF_ADMIN    },
+  { 'i', UF_INVIS    },
+  { 'o', UF_IRCOP    },
+  { 'D', UF_DEAF     },
+  { '\0', 0 }
+};
+
+/* *INDENT-ON* */
+
+void _modinit(module_t * m)
+{
+	MODULE_TRY_REQUEST_DEPENDENCY(m, "protocol/charybdis");
+
+	mode_list = sporksircd_mode_list;
+	user_mode_list = sporksircd_user_mode_list;
+	status_mode_list = sporksircd_status_mode_list;
+	prefix_mode_list = sporksircd_prefix_mode_list;
+
+	ircd = &SporksIRCD;
+
+	m->mflags = MODTYPE_CORE;
+
+	pmodule_loaded = true;
+}
+
+/* vim:cinoptions=>s,e0,n0,f0,{0,}0,^0,=s,ps,t0,c3,+s,(2s,us,)20,*30,gs,hs
+ * vim:ts=8
+ * vim:sw=8
+ * vim:noexpandtab
+ */
